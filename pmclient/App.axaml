<Application xmlns="https://github.com/avaloniaui"
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			x:Class="pmclient.App"
			xmlns:local="using:pmclient"
			xmlns:conv="clr-namespace:pmclient.Converters"
			RequestedThemeVariant="Default">
	<Application.DataTemplates>
		<local:ViewLocator />
	</Application.DataTemplates>

	<Application.Styles>
		<FluentTheme />

		<!-- Global UserControl -->
		<Style Selector="UserControl">
			<Setter Property="Background" Value="Transparent" />
		</Style>

		<!-- Global TextBlock -->
		<Style Selector="TextBlock">
			<Setter Property="FontWeight" Value="Medium" />
			<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
		</Style>

		<!-- Global ListBox -->
		<Style Selector="ListBox">
			<Setter Property="Background" Value="Transparent" />
		</Style>

		<!-- Global MenuFlyoutPresenter -->
		<Style Selector="MenuFlyoutPresenter">
			<Setter Property="Background" Value="{DynamicResource BaseHigh}" />
			<Setter Property="BorderBrush" Value="{DynamicResource BaseMedium}" />
		</Style>

		<!-- Global MenuItem -->
		<Style Selector="MenuItem">
			<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
			
			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
					<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				</Style>
			</Style>	

			<Style Selector="^:disabled">
				<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
					<Setter Property="Foreground" Value="{DynamicResource BaseMedium}" />
				</Style>
			</Style>
		</Style>

		<!-- Global Separator -->
		<Style Selector="Separator">
			<Setter Property="Background" Value="{DynamicResource BaseLow}" />
		</Style>

		<!-- Global TextBox -->
		<Style Selector="TextBox">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="CornerRadius" Value="10" />
			<Setter Property="FontSize" Value="15" />
			<Setter Property="FontWeight" Value="Medium" />
			<Setter Property="BorderBrush" Value="{DynamicResource BaseMedium}" />
		</Style>

		<!-- Global ComboBox -->
		<Style Selector="ComboBox">
			<Setter Property="Background" Value="Transparent" />

			<Style Selector="^ /template/ PathIcon#DropDownGlyph">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
			</Style>
			<!--  PointerOver State  -->
			<Style Selector="^:pointerover /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource BaseMedium}" />
			</Style>

			<!--  Focused State  -->
			<Style Selector="^:focused">
				<Style Selector="^ /template/ Border#Background">
					<Setter Property="Background" Value="Transparent" />
				</Style>
			</Style>

			<!--  Disabled State  -->
			<Style Selector="^:disabled">
				<Style Selector="^ /template/ Border#Background">
					<Setter Property="Background" Value="Transparent" />
				</Style>
			</Style>

		</Style>

		<!-- Border.SBorder -->
		<Style Selector="Border.SBorder">
			<Setter Property="BorderBrush" Value="{DynamicResource BaseMedium}" />
			<Setter Property="BorderThickness" Value="2" />
		</Style>

		<!-- Button.SButton -->
		<Style Selector="Button.SButton">
			<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="CornerRadius" Value="10" />

			<Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				<Setter Property="Background" Value="{DynamicResource BaseMedium}" />
			</Style>

			<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource BaseMedium}" />
				<Setter Property="Background" Value="Transparent" />
			</Style>

			<Style Selector="^:disable /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				<Setter Property="Background" Value="{DynamicResource BaseMedium}" />
			</Style>
		</Style>

		<!-- TextBox.DefaultTextBox -->
		<Style Selector="TextBox.DefaultTextBox">
			<Setter Property="CaretBrush" Value="{DynamicResource BaseLow}" />
			<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
			<Setter Property="UseFloatingWatermark" Value="True" />

			<Style Selector="^:pointerover">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				<Style Selector="^ /template/ Border#PART_BorderElement">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="{DynamicResource BaseLow}" />
				</Style>
			</Style>

			<Style Selector="^:focus">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				<Style Selector="^ /template/ Border#PART_BorderElement">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="{DynamicResource BaseLow}" />
				</Style>
			</Style>

			<Style Selector="^ /template/ TextBlock#PART_Watermark, ^ /template/ TextBlock#PART_FloatingWatermark">
				<Setter Property="Foreground" Value="{DynamicResource BaseMedium}" />
			</Style>
		</Style>

		<!-- TextBox.PasswordBox -->
		<Style Selector="TextBox.PasswordBox[AcceptsReturn=False]:not(TextBox:empty)">
			<Setter Property="PasswordChar" Value="*" />
			<Setter Property="TextInputOptions.ContentType" Value="Password" />
			<Setter Property="InnerRightContent">
				<Template>
					<ToggleButton IsChecked="{Binding $parent[TextBox].RevealPassword, Mode=TwoWay}">
						<ToggleButton.Styles>
							<Style Selector="ToggleButton">
								<Setter Property="Background" Value="Transparent" />
								<Setter Property="CornerRadius" Value="10" />
								<Setter Property="VerticalAlignment" Value="Stretch" />

								<Style Selector="^:checked">
									<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
										<Setter Property="Background" Value="Transparent" />
									</Style>

									<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
										<Setter Property="Background" Value="Transparent" />
									</Style>
								</Style>
							</Style>
						</ToggleButton.Styles>

						<TextBlock Text="{Binding !$parent[ToggleButton].IsChecked, Converter={StaticResource Password}}"
									Foreground="{DynamicResource BaseLow}" Classes="Icon" />
					</ToggleButton>
				</Template>
			</Setter>
		</Style>

		<!-- TextBox.Icon -->
		<Style Selector="TextBlock.Icon">
			<Setter Property="FontFamily" Value="{DynamicResource Icons}" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>

	</Application.Styles>

	<Application.Resources>
		<FontFamily x:Key="MainFont">Roboto</FontFamily>
		<FontFamily x:Key="Icons">avares://pmclient/Assets/FontAwesome.otf#FontAwesome</FontFamily>

		<SolidColorBrush x:Key="ComboBoxDropDownBackground" Color="{DynamicResource BaseHigh}" />
		<SolidColorBrush x:Key="ComboBoxDropDownGlyphForeground" Color="{DynamicResource BaseLow}" />
		<SolidColorBrush x:Key="ComboBoxDropDownGlyphForegroundDisabled" Color="Transparent" />
		<SolidColorBrush x:Key="TreeViewItemForeground" Color="{DynamicResource BaseLow}" />
		<conv:BoolToCharConverter x:Key="Password" TrueChar="&#xf06e;" FalseChar="&#xf070;" />

		<ResourceDictionary x:Key="Default">
			<Color x:Key="BaseHigh">#DDDDDD</Color>
			<Color x:Key="BaseMedium">#666666</Color>
			<Color x:Key="BaseLow">#2b2d30</Color>
		</ResourceDictionary>

		<ResourceDictionary x:Key="DarkTheme">
			<Color x:Key="BaseHigh">#00171F</Color>
			<Color x:Key="BaseMedium">#888888</Color>
			<Color x:Key="BaseLow">#DDDDDD</Color>
		</ResourceDictionary>
	</Application.Resources>
</Application>