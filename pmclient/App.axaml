<Application xmlns="https://github.com/avaloniaui"
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			x:Class="pmclient.App"
			xmlns:local="using:pmclient"
			xmlns:conv="clr-namespace:pmclient.Converters"
			xmlns:sys="clr-namespace:System;assembly=mscorlib"
			xmlns:converters="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls"
			RequestedThemeVariant="Default">
	<Application.DataTemplates>
		<local:ViewLocator />
	</Application.DataTemplates>

	<Application.Styles>
		<FluentTheme />
		<StyleInclude Source="avares://pmclient/Controls/IconControl.axaml" />

		<!-- Global UserControl -->
		<Style Selector="UserControl">
			<Setter Property="Background" Value="Transparent" />
		</Style>

		<!-- Global TextBlock -->
		<Style Selector="TextBlock">
			<Setter Property="FontWeight" Value="Medium" />
			<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
		</Style>

		<!-- Global ListBox -->
		<Style Selector="ListBox">
			<Setter Property="Background" Value="Transparent" />
		</Style>

		<!-- Global MenuFlyoutPresenter -->
		<Style Selector="MenuFlyoutPresenter">
			<Setter Property="Background" Value="{DynamicResource BaseHigh}" />
			<Setter Property="BorderBrush" Value="{DynamicResource BaseMedium}" />
		</Style>

		<!-- Global MenuItem -->
		<Style Selector="MenuItem">
			<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />

			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
					<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				</Style>
			</Style>

			<Style Selector="^:disabled">
				<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
					<Setter Property="Foreground" Value="{DynamicResource BaseMedium}" />
				</Style>
			</Style>
		</Style>

		<!-- Global Separator -->
		<Style Selector="Separator">
			<Setter Property="Background" Value="{DynamicResource BaseLow}" />
		</Style>

		<!-- Global TextBox -->
		<Style Selector="TextBox">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="CornerRadius" Value="10" />
			<Setter Property="FontSize" Value="15" />
			<Setter Property="FontWeight" Value="Medium" />
			<Setter Property="BorderBrush" Value="{DynamicResource BaseMedium}" />
		</Style>

		<!-- Global MenuItem -->
		<Style Selector="MenuItem">
			<Setter Property="Template">
				<ControlTemplate>
					<Panel>
						<Border Name="PART_LayoutRoot"
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" SharedSizeGroup="ToggleIcon" />
									<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIcon" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGT" />
									<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemChevron" />
								</Grid.ColumnDefinitions>

								<ContentControl Grid.Column="0"
												x:Name="PART_ToggleIconPresenter"
												IsVisible="False"
												Theme="{StaticResource FluentMenuItemIconTheme}"
												Margin="{DynamicResource MenuIconPresenterMargin}" />

								<ContentControl Grid.Column="1"
												x:Name="PART_IconPresenter"
												IsVisible="False"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Margin="5 0"
												Content="{TemplateBinding Icon}" />

								<ContentPresenter Name="PART_HeaderPresenter"
												Content="{TemplateBinding Header}"
												ContentTemplate="{TemplateBinding HeaderTemplate}"
												VerticalAlignment="Center"
												HorizontalAlignment="Stretch"
												RecognizesAccessKey="True"
												Grid.Column="2" />

								<TextBlock x:Name="PART_InputGestureText"
											Grid.Column="3"
											Margin="{DynamicResource MenuInputGestureTextMargin}"
											Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
											HorizontalAlignment="Right"
											VerticalAlignment="Center"
											Foreground="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForeground}" />

								<Path Name="PART_ChevronPath"
									Stretch="Uniform"
									Width="8"
									Height="16"
									Data="{StaticResource MenuItemChevronPathData}"
									Fill="{DynamicResource MenuFlyoutSubItemChevron}"
									Margin="{DynamicResource MenuFlyoutItemChevronMargin}"
									VerticalAlignment="Center"
									Grid.Column="4" />
							</Grid>
						</Border>

						<Popup Name="PART_Popup"
								WindowManagerAddShadowHint="False"
								Placement="RightEdgeAlignedTop"
								HorizontalOffset="{DynamicResource MenuFlyoutSubItemPopupHorizontalOffset}"
								IsLightDismissEnabled="False"
								IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}">
							<Border Background="{DynamicResource MenuFlyoutPresenterBackground}"
									BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
									BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
									Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
									MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
									MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
									HorizontalAlignment="Stretch"
									CornerRadius="{DynamicResource OverlayCornerRadius}">
								<ScrollViewer Theme="{StaticResource FluentMenuScrollViewer}">
									<ItemsPresenter Name="PART_ItemsPresenter"
													ItemsPanel="{TemplateBinding ItemsPanel}"
													Margin="{DynamicResource MenuFlyoutScrollerMargin}"
													Grid.IsSharedSizeScope="True" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Panel>
				</ControlTemplate>
			</Setter>
		</Style>

		<!-- Global TreeViewItem -->
		<Style Selector="TreeViewItem">
			<Setter Property="Template">
				<ControlTemplate>
					<StackPanel>
						<Border Name="PART_LayoutRoot"
								Classes="TreeViewItemLayoutRoot"
								Focusable="True"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								MinHeight="{TemplateBinding MinHeight}"
								TemplatedControl.IsTemplateFocusTarget="False">
							<Grid Name="PART_Header" ColumnDefinitions="*, Auto" HorizontalAlignment="Stretch">
								<ContentPresenter Name="PART_HeaderPresenter"
												Grid.Column="0"
												Focusable="False"
												Background="Transparent"
												Content="{TemplateBinding Header}"
												ContentTemplate="{TemplateBinding HeaderTemplate}"
												HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
												VerticalAlignment="{TemplateBinding VerticalAlignment}"
												Margin="{TemplateBinding Padding}" />
								<Panel Grid.Column="1" Name="PART_ExpandCollapseChevronContainer"
										Margin="{StaticResource TreeViewItemExpandCollapseChevronMargin}">
									<ToggleButton Name="PART_ExpandCollapseChevron"
												Theme="{StaticResource FluentTreeViewExpandCollapseChevron}"
												Focusable="False"
												IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}" />
								</Panel>
							</Grid>
						</Border>
						<ItemsPresenter Name="PART_ItemsPresenter"
										IsVisible="{TemplateBinding IsExpanded}"
										ItemsPanel="{TemplateBinding ItemsPanel}" />
					</StackPanel>
				</ControlTemplate>
			</Setter>
		</Style>

		<!-- Global ComboBox -->
		<Style Selector="ComboBox">
			<Setter Property="Background" Value="Transparent" />

			<Style Selector="^ /template/ PathIcon#DropDownGlyph">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
			</Style>
			<!--  PointerOver State  -->
			<Style Selector="^:pointerover /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource BaseMedium}" />
			</Style>

			<!--  Focused State  -->
			<Style Selector="^:focused">
				<Style Selector="^ /template/ Border#Background">
					<Setter Property="Background" Value="Transparent" />
				</Style>
			</Style>

			<!--  Disabled State  -->
			<Style Selector="^:disabled">
				<Style Selector="^ /template/ Border#Background">
					<Setter Property="Background" Value="Transparent" />
				</Style>
			</Style>

		</Style>

		<!-- Border.SBorder -->
		<Style Selector="Border.SBorder">
			<Setter Property="BorderBrush" Value="{DynamicResource BaseMedium}" />
			<Setter Property="BorderThickness" Value="2" />
		</Style>

		<!-- Button.SButton -->
		<Style Selector="Button.SButton">
			<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="CornerRadius" Value="10" />

			<Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				<Setter Property="Background" Value="{DynamicResource BaseMedium}" />
			</Style>

			<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource BaseMedium}" />
				<Setter Property="Background" Value="Transparent" />
			</Style>

			<Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="IsVisible" Value="False" />
			</Style>
		</Style>

		<!-- Button.DefaultButton -->
		<Style Selector="Button.DefaultButton">
			<Setter Property="Background" Value="Gray" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="CornerRadius" Value="10" />

			<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Background" Value="{DynamicResource BaseMedium}" />
			</Style>

			<Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="White" />
			</Style>
		</Style>

		<!-- TextBox.DefaultTextBox -->
		<Style Selector="TextBox.DefaultTextBox">
			<Setter Property="CaretBrush" Value="{DynamicResource BaseLow}" />
			<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
			<Setter Property="UseFloatingWatermark" Value="True" />

			<Style Selector="^:pointerover">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				<Style Selector="^ /template/ Border#PART_BorderElement">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="{DynamicResource BaseLow}" />
				</Style>
			</Style>

			<Style Selector="^:focus">
				<Setter Property="Foreground" Value="{DynamicResource BaseLow}" />
				<Style Selector="^ /template/ Border#PART_BorderElement">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="{DynamicResource BaseLow}" />
				</Style>
			</Style>

			<Style Selector="^ /template/ TextBlock#PART_Watermark, ^ /template/ TextBlock#PART_FloatingWatermark">
				<Setter Property="Foreground" Value="{DynamicResource BaseMedium}" />
			</Style>
		</Style>

		<!-- TextBox.PasswordBox -->
		<Style Selector="TextBox.PasswordBox[AcceptsReturn=False]:not(TextBox:empty)">
			<Setter Property="PasswordChar" Value="*" />
			<Setter Property="TextInputOptions.ContentType" Value="Password" />
			<Setter Property="InnerRightContent">
				<Template>
					<ToggleButton IsChecked="{Binding $parent[TextBox].RevealPassword, Mode=TwoWay}">
						<ToggleButton.Styles>
							<Style Selector="ToggleButton">
								<Setter Property="Background" Value="Transparent" />
								<Setter Property="CornerRadius" Value="10" />
								<Setter Property="VerticalAlignment" Value="Stretch" />

								<Style Selector="^:checked">
									<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
										<Setter Property="Background" Value="Transparent" />
									</Style>

									<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
										<Setter Property="Background" Value="Transparent" />
									</Style>
								</Style>
							</Style>
						</ToggleButton.Styles>

						<TextBlock Text="{Binding !$parent[ToggleButton].IsChecked, Converter={StaticResource Password}}"
									Foreground="{DynamicResource BaseLow}" Classes="Icon" />
					</ToggleButton>
				</Template>
			</Setter>
		</Style>

		<!-- TextBox.Icon -->
		<Style Selector="TextBlock.Icon">
			<Setter Property="FontFamily" Value="{DynamicResource Icons}" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>
	</Application.Styles>

	<Application.Resources>
		<FontFamily x:Key="MainFont">Roboto</FontFamily>
		<FontFamily x:Key="Icons">avares://pmclient/Assets/FontAwesome.otf#FontAwesome</FontFamily>

		<SolidColorBrush x:Key="ComboBoxDropDownBackground" Color="{DynamicResource BaseHigh}" />
		<SolidColorBrush x:Key="ComboBoxDropDownGlyphForeground" Color="{DynamicResource BaseLow}" />
		<SolidColorBrush x:Key="ComboBoxDropDownGlyphForegroundDisabled" Color="Transparent" />
		<SolidColorBrush x:Key="TreeViewItemForeground" Color="{DynamicResource BaseLow}" />
		<conv:BoolToCharConverter x:Key="Password" TrueChar="&#xf06e;" FalseChar="&#xf070;" />
		<x:Double x:Key="TreeViewItemIndent">5</x:Double>
		<converters:MarginMultiplierConverter Indent="{StaticResource TreeViewItemIndent}" Left="True"
											x:Key="TreeViewItemLeftMarginConverter" />

		<ResourceDictionary x:Key="Ru">
			<sys:String x:Key="LoginHeader">Авторизация</sys:String>
			<sys:String x:Key="RegisterHeader">Регистрация</sys:String>
			<sys:String x:Key="EmailWatermark">Почта</sys:String>
			<sys:String x:Key="PasswordWatermark">Пароль</sys:String>
			<sys:String x:Key="UsernameWatermark">Имя</sys:String>
			<sys:String x:Key="ConfirmPasswordWatermark">Подтвердите пароль</sys:String>
			<sys:String x:Key="TitleWatermark">Название</sys:String>
			<sys:String x:Key="WebsiteWatermark">Вебсайт</sys:String>
			<sys:String x:Key="NotesWatermark">Заметки</sys:String>
			<sys:String x:Key="SearchWatermark">Поиск</sys:String>
			<sys:String x:Key="AutoWatermark">Авто</sys:String>
			<sys:String x:Key="CodeWatermark">Код</sys:String>
			<sys:String x:Key="ButtonRegNewAcc">Зарегистрироваться</sys:String>
			<sys:String x:Key="ButtonLogin">Войти</sys:String>
			<sys:String x:Key="ButtonRegister">Зарегистрироваться</sys:String>
			<sys:String x:Key="ButtonBack">Назад</sys:String>
			<sys:String x:Key="ButtonSave">Сохранить</sys:String>
			<sys:String x:Key="ButtonEdit">Изменить</sys:String>
			<sys:String x:Key="ButtonCancel">Отмена</sys:String>
			<sys:String x:Key="ButtonDelete">Удалить</sys:String>
			<sys:String x:Key="ButtonFavorite">Избранное</sys:String>
			<sys:String x:Key="ButtonEditGroup">Ред. Группу</sys:String>
			<sys:String x:Key="ButtonChangeTheme">Изменить тему</sys:String>
			<sys:String x:Key="ButtonChangeLanguage">Изменить язык</sys:String>
			<sys:String x:Key="ButtonLogout">Выйти</sys:String>
			<sys:String x:Key="ButtonNewItem">Добавить</sys:String>
			<sys:String x:Key="ButtonNewCard">Карточка</sys:String>
			<sys:String x:Key="ButtonNewGroup">Группа</sys:String>
			<sys:String x:Key="ButtonGeneratePassword">Сгенерировать пароль</sys:String>
			<sys:String x:Key="ButtonAuth">Двухфакторная аутентификация</sys:String>
			<sys:String x:Key="ButtonEnable">Активировать</sys:String>
			<sys:String x:Key="ButtonDisable">Деактивировать</sys:String>
			<sys:String x:Key="ButtonValidate">Подтвердить</sys:String>
		</ResourceDictionary>

		<ResourceDictionary x:Key="En">
			<sys:String x:Key="LoginHeader">Login</sys:String>
			<sys:String x:Key="RegisterHeader">Registration</sys:String>
			<sys:String x:Key="EmailWatermark">Email</sys:String>
			<sys:String x:Key="PasswordWatermark">Password</sys:String>
			<sys:String x:Key="UsernameWatermark">Username</sys:String>
			<sys:String x:Key="ConfirmPasswordWatermark">Confirm password</sys:String>
			<sys:String x:Key="TitleWatermark">Title</sys:String>
			<sys:String x:Key="WebsiteWatermark">Website</sys:String>
			<sys:String x:Key="NotesWatermark">Notes</sys:String>
			<sys:String x:Key="SearchWatermark">Search</sys:String>
			<sys:String x:Key="AutoWatermark">Auto</sys:String>
			<sys:String x:Key="CodeWatermark">Code</sys:String>
			<sys:String x:Key="ButtonRegNewAcc">Register new account</sys:String>
			<sys:String x:Key="ButtonLogin">Log in</sys:String>
			<sys:String x:Key="ButtonRegister">Register</sys:String>
			<sys:String x:Key="ButtonBack">Back</sys:String>
			<sys:String x:Key="ButtonSave">Save</sys:String>
			<sys:String x:Key="ButtonEdit">Edit</sys:String>
			<sys:String x:Key="ButtonCancel">Cancel</sys:String>
			<sys:String x:Key="ButtonDelete">Delete</sys:String>
			<sys:String x:Key="ButtonFavorite">Favorite</sys:String>
			<sys:String x:Key="ButtonEditGroup">Edit Group</sys:String>
			<sys:String x:Key="ButtonChangeTheme">Change Theme</sys:String>
			<sys:String x:Key="ButtonChangeLanguage">Change Language</sys:String>
			<sys:String x:Key="ButtonLogout">Log Out</sys:String>
			<sys:String x:Key="ButtonNewItem">New Item</sys:String>
			<sys:String x:Key="ButtonNewCard">New Card</sys:String>
			<sys:String x:Key="ButtonNewGroup">New Group</sys:String>
			<sys:String x:Key="ButtonGeneratePassword">Generate password</sys:String>
			<sys:String x:Key="ButtonAuth">2FA</sys:String>
			<sys:String x:Key="ButtonEnable">Enable</sys:String>
			<sys:String x:Key="ButtonDisable">Disable</sys:String>
			<sys:String x:Key="ButtonValidate">Validate</sys:String>
		</ResourceDictionary>

		<ResourceDictionary x:Key="Light">
			<Color x:Key="BaseHigh">#DDDDDD</Color>
			<Color x:Key="BaseMedium">#666666</Color>
			<Color x:Key="BaseLow">#2b2d30</Color>
		</ResourceDictionary>

		<ResourceDictionary x:Key="Dark">
			<Color x:Key="BaseHigh">#2b2d30</Color>
			<Color x:Key="BaseMedium">#888888</Color>
			<Color x:Key="BaseLow">#DDDDDD</Color>
		</ResourceDictionary>
	</Application.Resources>
</Application>